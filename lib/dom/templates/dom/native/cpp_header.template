// Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

// WARNING: Do not edit - generated code.

#ifndef Dart$(INTERFACE)_h
#define Dart$(INTERFACE)_h

#include "DartDOMWrapper.h"
$WEBCORE_INCLUDES
#include <dart_api.h>

namespace WebCore {

struct Dart$INTERFACE {
    static const char* const dartImplementationClassName;
    typedef $WEBCORE_CLASS_NAME NativeType;

    static PassRefPtr<NativeType> toNative(Dart_Handle handle, Dart_Handle& exception)
    {
        return DartDOMWrapper::unwrapDartWrapper<Dart$INTERFACE>(handle, exception);
    }

    static bool instanceOf(Dart_Handle handle)
    {
        return DartDOMWrapper::instanceOf(dartImplementationClassName, handle);
    }

    static Dart_NativeFunction resolver(Dart_Handle name, int argumentCount);
};

$TO_DART_VALUE
inline Dart_Handle toDartValue(PassRefPtr< $WEBCORE_CLASS_NAME > value)
{
    return toDartValue(value.get());
}

namespace Dart$(INTERFACE)Internal {
$DECLARATIONS
}

}

#endif // Dart$(INTERFACE)_h
